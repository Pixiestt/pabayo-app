<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/capstone2/customer/CustomerFragmentRequest.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/capstone2/customer/CustomerFragmentRequest.kt" />
              <option name="originalContent" value="package com.example.capstone2.customer&#10;&#10;import android.content.Context&#10;import android.content.Intent&#10;import android.os.Bundle&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.Button&#10;import android.widget.TextView&#10;import androidx.appcompat.app.AlertDialog&#10;import androidx.fragment.app.Fragment&#10;import com.example.capstone2.R&#10;&#10;class CustomerFragmentRequest : Fragment() {&#10;&#10;    override fun onCreateView(&#10;        inflater: LayoutInflater,&#10;        container: ViewGroup?,&#10;        savedInstanceState: Bundle?&#10;    ): View? {&#10;        return inflater.inflate(R.layout.fragment_request_simple, container, false)&#10;    }&#10;&#10;    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {&#10;        super.onViewCreated(view, savedInstanceState)&#10;        &#10;        val btnStartWizard = view.findViewById&lt;Button&gt;(R.id.btnStartWizard)&#10;        val tvTitle = view.findViewById&lt;TextView&gt;(R.id.tvTitle)&#10;        val tvDescription = view.findViewById&lt;TextView&gt;(R.id.tvDescription)&#10;&#10;        tvTitle.text = &quot;Create New Request&quot;&#10;        tvDescription.text = &quot;Use our step-by-step wizard to create your rice milling request easily and quickly.&quot;&#10;        &#10;        btnStartWizard.setOnClickListener {&#10;            // Check the user's account status saved in SharedPreferences&#10;            val sharedPref = requireContext().getSharedPreferences(&quot;MyAppPrefs&quot;, Context.MODE_PRIVATE)&#10;            val status = sharedPref.getString(&quot;user_status&quot;, &quot;approved&quot;)?.trim()?.lowercase()&#10;&#10;            if (status == &quot;pending&quot;) {&#10;                // Show blocking dialog informing user their account is not approved&#10;                AlertDialog.Builder(requireContext())&#10;                    .setTitle(&quot;Account not approved&quot;)&#10;                    .setMessage(&quot;Your account is still pending approval. You cannot avail services until your account is approved.&quot;)&#10;                    .setPositiveButton(&quot;OK&quot;, null)&#10;                    .show()&#10;            } else {&#10;                // Proceed to the request wizard&#10;                val intent = Intent(requireContext(), RequestWizardActivity::class.java)&#10;                startActivity(intent)&#10;            }&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.example.capstone2.customer&#10;&#10;import android.content.Context&#10;import android.content.Intent&#10;import android.os.Bundle&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.Button&#10;import android.widget.TextView&#10;import androidx.appcompat.app.AlertDialog&#10;import androidx.fragment.app.Fragment&#10;import com.example.capstone2.R&#10;&#10;class CustomerFragmentRequest : Fragment() {&#10;&#10;    override fun onCreateView(&#10;        inflater: LayoutInflater,&#10;        container: ViewGroup?,&#10;        savedInstanceState: Bundle?&#10;    ): View? {&#10;        return inflater.inflate(R.layout.fragment_request_simple, container, false)&#10;    }&#10;&#10;    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {&#10;        super.onViewCreated(view, savedInstanceState)&#10;        &#10;        val btnStartWizard = view.findViewById&lt;Button&gt;(R.id.btnStartWizard)&#10;        val tvTitle = view.findViewById&lt;TextView&gt;(R.id.tvTitle)&#10;        val tvDescription = view.findViewById&lt;TextView&gt;(R.id.tvDescription)&#10;&#10;        tvTitle.text = &quot;Create New Request&quot;&#10;        tvDescription.text = &quot;Use our step-by-step wizard to create your rice milling request easily and quickly.&quot;&#10;        &#10;        btnStartWizard.setOnClickListener {&#10;            // Check the user's account status saved in SharedPreferences&#10;            val sharedPref = requireContext().getSharedPreferences(&quot;MyAppPrefs&quot;, Context.MODE_PRIVATE)&#10;            val status = sharedPref.getString(&quot;user_status&quot;, &quot;approved&quot;)?.trim()?.lowercase()&#10;&#10;            if (status == &quot;pending&quot;) {&#10;                // Show blocking dialog informing user their account is not approved&#10;                AlertDialog.Builder(requireContext())&#10;                    .setTitle(&quot;Account not approved&quot;)&#10;                    .setMessage(&quot;Your account is still pending approval. You cannot avail services until your account is approved.&quot;)&#10;                    .setPositiveButton(&quot;OK&quot;, null)&#10;                    .show()&#10;            } else {&#10;                // Proceed to the request wizard.&#10;                val intent = Intent(requireContext(), RequestWizardActivity::class.java)&#10;                startActivity(intent)&#10;            }&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/capstone2/customer/FeedsConversionFragment.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/capstone2/customer/FeedsConversionFragment.kt" />
              <option name="originalContent" value="package com.example.capstone2.customer&#10;&#10;import android.os.Bundle&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.Button&#10;import android.widget.Switch&#10;import android.widget.TextView&#10;import androidx.fragment.app.Fragment&#10;import com.example.capstone2.R&#10;&#10;class FeedsConversionFragment : Fragment() {&#10;    &#10;    private lateinit var switchFeedsConversion: Switch&#10;    private lateinit var btnNext: Button&#10;    private lateinit var tvStepProgress: TextView&#10;    &#10;    override fun onCreateView(&#10;        inflater: LayoutInflater,&#10;        container: ViewGroup?,&#10;        savedInstanceState: Bundle?&#10;    ): View? {&#10;        return inflater.inflate(R.layout.fragment_feeds_conversion, container, false)&#10;    }&#10;    &#10;    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {&#10;        super.onViewCreated(view, savedInstanceState)&#10;        &#10;        switchFeedsConversion = view.findViewById(R.id.switchFeedsConversion)&#10;        btnNext = view.findViewById(R.id.btnNext)&#10;        tvStepProgress = view.findViewById(R.id.tvStepProgress)&#10;        &#10;        val activity = requireActivity() as RequestWizardActivity&#10;        tvStepProgress.text = &quot;4/5&quot;&#10;&#10;        // Prefill from wizard data if present&#10;        val wizard = activity.getWizardData()&#10;        wizard.feedsConversion?.let { isChecked -&gt;&#10;            switchFeedsConversion.isChecked = isChecked&#10;            activity.getWizardData().feedsConversion = isChecked&#10;        }&#10;&#10;        // Set up switch listener&#10;        switchFeedsConversion.setOnCheckedChangeListener { _, isChecked -&gt;&#10;            activity.getWizardData().feedsConversion = isChecked&#10;        }&#10;        &#10;        btnNext.setOnClickListener {&#10;            activity.goToNextStep()&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.capstone2.customer&#10;&#10;import android.os.Bundle&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.Button&#10;import android.widget.RadioButton&#10;import android.widget.RadioGroup&#10;import android.widget.TextView&#10;import androidx.fragment.app.Fragment&#10;import com.example.capstone2.R&#10;&#10;class FeedsConversionFragment : Fragment() {&#10;    &#10;    private lateinit var radioGroupFeeds: RadioGroup&#10;    private lateinit var radioFeedsYes: RadioButton&#10;    private lateinit var radioFeedsNo: RadioButton&#10;    private lateinit var btnNext: Button&#10;    private lateinit var tvStepProgress: TextView&#10;    &#10;    override fun onCreateView(&#10;        inflater: LayoutInflater,&#10;        container: ViewGroup?,&#10;        savedInstanceState: Bundle?&#10;    ): View? {&#10;        return inflater.inflate(R.layout.fragment_feeds_conversion, container, false)&#10;    }&#10;    &#10;    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {&#10;        super.onViewCreated(view, savedInstanceState)&#10;        &#10;        radioGroupFeeds = view.findViewById(R.id.radioGroupFeeds)&#10;        radioFeedsYes = view.findViewById(R.id.radioFeedsYes)&#10;        radioFeedsNo = view.findViewById(R.id.radioFeedsNo)&#10;        btnNext = view.findViewById(R.id.btnNext)&#10;        tvStepProgress = view.findViewById(R.id.tvStepProgress)&#10;        &#10;        val activity = requireActivity() as RequestWizardActivity&#10;        tvStepProgress.text = &quot;4/5&quot;&#10;&#10;        // Initially disable Next until user explicitly chooses Yes or No&#10;        btnNext.isEnabled = false&#10;        btnNext.alpha = 0.5f&#10;&#10;        // Prefill from wizard data only if already set (e.g., editing an existing request)&#10;        val wizard = activity.getWizardData()&#10;        if (wizard.feedsConversion != null) {&#10;            val isChecked = wizard.feedsConversion == true&#10;            if (isChecked) radioFeedsYes.isChecked = true else radioFeedsNo.isChecked = true&#10;            // enable Next because a choice exists&#10;            btnNext.isEnabled = true&#10;            btnNext.alpha = 1.0f&#10;        }&#10;&#10;        // Set up radio group listener: enable Next and write choice into wizard data&#10;        radioGroupFeeds.setOnCheckedChangeListener { _, checkedId -&gt;&#10;            val selected = when (checkedId) {&#10;                R.id.radioFeedsYes -&gt; true&#10;                R.id.radioFeedsNo -&gt; false&#10;                else -&gt; null&#10;            }&#10;            // only enable Next when a valid selection (Yes/No) is made&#10;            if (selected != null) {&#10;                activity.getWizardData().feedsConversion = selected&#10;                btnNext.isEnabled = true&#10;                btnNext.alpha = 1.0f&#10;            } else {&#10;                btnNext.isEnabled = false&#10;                btnNext.alpha = 0.5f&#10;            }&#10;        }&#10;        &#10;        btnNext.setOnClickListener {&#10;            activity.goToNextStep()&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/capstone2/owner/OwnerFragmentTrack.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/capstone2/owner/OwnerFragmentTrack.kt" />
              <option name="originalContent" value="package com.example.capstone2.owner&#10;&#10;import android.content.Context&#10;import android.os.Bundle&#10;import android.view.View&#10;import android.widget.Toast&#10;import androidx.fragment.app.Fragment&#10;import androidx.lifecycle.ViewModelProvider&#10;import androidx.recyclerview.widget.LinearLayoutManager&#10;import androidx.recyclerview.widget.RecyclerView&#10;import com.example.capstone2.R&#10;import com.example.capstone2.adapter.RequestAdapter&#10;import com.example.capstone2.adapter.TrackAdapter&#10;import com.example.capstone2.network.ApiClient&#10;import com.example.capstone2.repository.RequestRepository&#10;import com.example.capstone2.viewmodel.OwnerRequestViewModel&#10;import com.example.capstone2.viewmodel.OwnerRequestViewModelFactory&#10;&#10;class OwnerFragmentTrack : Fragment(R.layout.owner_fragment_track) {&#10;&#10;    private lateinit var trackAdapter: TrackAdapter&#10;    private lateinit var recyclerView: RecyclerView&#10;    private lateinit var requestAdapter: RequestAdapter&#10;    private lateinit var ownerRequestViewModel: OwnerRequestViewModel&#10;&#10;    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {&#10;        super.onViewCreated(view, savedInstanceState)&#10;&#10;        recyclerView = view.findViewById(R.id.recyclerViewOwnerTrack)&#10;        recyclerView.layoutManager = LinearLayoutManager(requireContext())&#10;        requestAdapter = RequestAdapter(emptyList()) { /* No action needed for accepted list */ }&#10;        recyclerView.adapter = requestAdapter&#10;&#10;        // Get token&#10;        val sharedPreferences = requireContext().getSharedPreferences(&quot;MyAppPrefs&quot;, Context.MODE_PRIVATE)&#10;        val token = sharedPreferences.getString(&quot;auth_token&quot;, null)&#10;&#10;        if (token.isNullOrEmpty()) {&#10;            Toast.makeText(requireContext(), &quot;Missing auth token&quot;, Toast.LENGTH_SHORT).show()&#10;            return&#10;        }&#10;&#10;        // Setup ViewModel&#10;        val authedApiService = ApiClient.getApiService { token }&#10;        val repository = RequestRepository(authedApiService)&#10;        val viewModelFactory = OwnerRequestViewModelFactory(repository, requireActivity().application)&#10;        ownerRequestViewModel = ViewModelProvider(this, viewModelFactory)[OwnerRequestViewModel::class.java]&#10;        trackAdapter = TrackAdapter(emptyList()) { request, newStatusID -&gt;&#10;            // Call a function to update status&#10;            updateRequestStatus(request.requestID, newStatusID)&#10;        }&#10;&#10;        recyclerView.adapter = trackAdapter&#10;&#10;        ownerRequestViewModel.ownerRequests.observe(viewLifecycleOwner) { requests -&gt;&#10;            val filteredRequests = requests?.filterNot { it.statusID.toInt() in listOf(1, 8, 9) }&#10;            trackAdapter.updateRequests(filteredRequests.orEmpty())&#10;&#10;&#10;            if (filteredRequests.isNullOrEmpty()) {&#10;                Toast.makeText(requireContext(), &quot;No requests found matching the filter&quot;, Toast.LENGTH_SHORT).show()&#10;            }&#10;        }&#10;&#10;        // Fetch requests&#10;        ownerRequestViewModel.fetchOwnerRequests()&#10;    }&#10;&#10;    private fun updateRequestStatus(requestID: Long, newStatusID: Int) {&#10;        ownerRequestViewModel.updateStatus(requestID, newStatusID,&#10;            onSuccess = {&#10;                Toast.makeText(requireContext(), &quot;Status updated&quot;, Toast.LENGTH_SHORT).show()&#10;                ownerRequestViewModel.fetchOwnerRequests() //  Refresh from backend&#10;            },&#10;            onError = { error -&gt;&#10;                Toast.makeText(requireContext(), error, Toast.LENGTH_SHORT).show()&#10;            }&#10;        )&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.capstone2.owner&#10;&#10;import android.content.Context&#10;import android.os.Bundle&#10;import android.view.View&#10;import android.widget.Toast&#10;import androidx.fragment.app.Fragment&#10;import androidx.lifecycle.ViewModelProvider&#10;import androidx.recyclerview.widget.LinearLayoutManager&#10;import androidx.recyclerview.widget.RecyclerView&#10;import com.example.capstone2.R&#10;import com.example.capstone2.adapter.RequestAdapter&#10;import com.example.capstone2.adapter.TrackAdapter&#10;import com.example.capstone2.network.ApiClient&#10;import com.example.capstone2.repository.RequestRepository&#10;import com.example.capstone2.viewmodel.OwnerRequestViewModel&#10;import com.example.capstone2.viewmodel.OwnerRequestViewModelFactory&#10;import com.example.capstone2.data.models.Request&#10;import java.text.ParseException&#10;import java.text.SimpleDateFormat&#10;import java.util.Date&#10;import java.util.Locale&#10;&#10;class OwnerFragmentTrack : Fragment(R.layout.owner_fragment_track) {&#10;&#10;    private lateinit var trackAdapter: TrackAdapter&#10;    private lateinit var recyclerView: RecyclerView&#10;    private lateinit var requestAdapter: RequestAdapter&#10;    private lateinit var ownerRequestViewModel: OwnerRequestViewModel&#10;&#10;    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {&#10;        super.onViewCreated(view, savedInstanceState)&#10;&#10;        recyclerView = view.findViewById(R.id.recyclerViewOwnerTrack)&#10;        recyclerView.layoutManager = LinearLayoutManager(requireContext())&#10;        requestAdapter = RequestAdapter(emptyList()) { /* No action needed for accepted list */ }&#10;        recyclerView.adapter = requestAdapter&#10;&#10;        // Get token&#10;        val sharedPreferences = requireContext().getSharedPreferences(&quot;MyAppPrefs&quot;, Context.MODE_PRIVATE)&#10;        val token = sharedPreferences.getString(&quot;auth_token&quot;, null)&#10;&#10;        if (token.isNullOrEmpty()) {&#10;            Toast.makeText(requireContext(), &quot;Missing auth token&quot;, Toast.LENGTH_SHORT).show()&#10;            return&#10;        }&#10;&#10;        // Setup ViewModel&#10;        val authedApiService = ApiClient.getApiService { token }&#10;        val repository = RequestRepository(authedApiService)&#10;        val viewModelFactory = OwnerRequestViewModelFactory(repository, requireActivity().application)&#10;        ownerRequestViewModel = ViewModelProvider(this, viewModelFactory)[OwnerRequestViewModel::class.java]&#10;        trackAdapter = TrackAdapter(emptyList()) { request, newStatusID -&gt;&#10;            // Call a function to update status&#10;            updateRequestStatus(request.requestID, newStatusID)&#10;        }&#10;&#10;        recyclerView.adapter = trackAdapter&#10;&#10;        ownerRequestViewModel.ownerRequests.observe(viewLifecycleOwner) { requests -&gt;&#10;            val filteredRequests = requests?.filterNot { it.statusID.toInt() in listOf(1, 8, 9) }&#10;            // Sort filtered requests by date/time ascending (oldest first at top)&#10;            val sorted = filteredRequests?.sortedWith(compareBy { req -&gt;&#10;                // parse a Date from the Request; if null, we put it at the end&#10;                parseDateForTrack(req) ?: Date(Long.MAX_VALUE)&#10;            })&#10;&#10;            trackAdapter.updateRequests(sorted.orEmpty())&#10;&#10;&#10;            if (filteredRequests.isNullOrEmpty()) {&#10;                Toast.makeText(requireContext(), &quot;No requests found matching the filter&quot;, Toast.LENGTH_SHORT).show()&#10;            }&#10;        }&#10;&#10;        // Fetch requests&#10;        ownerRequestViewModel.fetchOwnerRequests()&#10;    }&#10;&#10;    // Try multiple common date/time formats and return the first successful parse&#10;    private fun parseDateForTrack(request: Request): Date? {&#10;        val candidates = listOf(request.submittedAt, request.dateUpdated, request.pickupDate, request.deliveryDate, request.schedule)&#10;        val formats = listOf(&#10;            &quot;yyyy-MM-dd'T'HH:mm:ss'Z'&quot;,&#10;            &quot;yyyy-MM-dd'T'HH:mm:ss.SSS'Z'&quot;,&#10;            &quot;yyyy-MM-dd'T'HH:mm:ss&quot;,&#10;            &quot;yyyy-MM-dd HH:mm:ss&quot;,&#10;            &quot;yyyy-MM-dd&quot;&#10;        )&#10;&#10;        for (c in candidates) {&#10;            if (!c.isNullOrBlank()) {&#10;                val trimmed = c.trim()&#10;                // Try full patterns first&#10;                for (fmt in formats) {&#10;                    try {&#10;                        val sdf = SimpleDateFormat(fmt, Locale.UK)&#10;                        sdf.isLenient = true&#10;                        return sdf.parse(trimmed)&#10;                    } catch (e: ParseException) {&#10;                        // try next format&#10;                    } catch (e: Exception) {&#10;                        // ignore and try next&#10;                    }&#10;                }&#10;                // As a fallback, try to parse just the date portion yyyy-MM-dd&#10;                if (trimmed.length &gt;= 10) {&#10;                    val dateOnly = trimmed.substring(0, 10)&#10;                    try {&#10;                        val sdf = SimpleDateFormat(&quot;yyyy-MM-dd&quot;, Locale.UK)&#10;                        sdf.isLenient = true&#10;                        return sdf.parse(dateOnly)&#10;                    } catch (e: Exception) {&#10;                        // ignore&#10;                    }&#10;                }&#10;            }&#10;        }&#10;        return null&#10;    }&#10;&#10;    private fun updateRequestStatus(requestID: Long, newStatusID: Int) {&#10;        ownerRequestViewModel.updateStatus(requestID, newStatusID,&#10;            onSuccess = {&#10;                Toast.makeText(requireContext(), &quot;Status updated&quot;, Toast.LENGTH_SHORT).show()&#10;                ownerRequestViewModel.fetchOwnerRequests() //  Refresh from backend&#10;            },&#10;            onError = { error -&gt;&#10;                Toast.makeText(requireContext(), error, Toast.LENGTH_SHORT).show()&#10;            }&#10;        )&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_feeds_conversion.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_feeds_conversion.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/white&quot;&gt;&#10;&#10;    &lt;!-- Header --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/headerLayout&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:background=&quot;@color/primary_green&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;24dp&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Step 4 of 5:&quot;&#10;            android:textColor=&quot;@color/white&quot;&#10;            android:textSize=&quot;16sp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;4dp&quot;&#10;            android:text=&quot;Feeds Conversion&quot;&#10;            android:textColor=&quot;@color/white&quot;&#10;            android:textSize=&quot;24sp&quot;&#10;            android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tvStepProgress&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;8dp&quot;&#10;            android:text=&quot;4/5&quot;&#10;            android:textColor=&quot;@color/white&quot;&#10;            android:textSize=&quot;14sp&quot; /&gt;&#10;&#10;        &lt;!-- Progress Bar --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;8dp&quot;&#10;            android:layout_marginTop=&quot;12dp&quot;&#10;            android:background=&quot;@drawable/progress_bar_background&quot;&#10;            android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:background=&quot;@color/primary_green&quot; /&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:background=&quot;@color/primary_green&quot; /&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:background=&quot;@color/primary_green&quot; /&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:background=&quot;@color/primary_green&quot; /&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:background=&quot;@color/light_gray&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Content --&gt;&#10;    &lt;ScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:fillViewport=&quot;true&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/btnNext&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/headerLayout&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;24dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Would you like to convert your milling by-products (rice hulls, bran) into animal feeds?&quot;&#10;                android:textSize=&quot;18sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;32dp&quot; /&gt;&#10;&#10;            &lt;!-- Toggle Switch --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:gravity=&quot;center_vertical&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:text=&quot;Yes&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                &lt;Switch&#10;                    android:id=&quot;@+id/switchFeedsConversion&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:checked=&quot;true&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:layout_width=&quot;0dp&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:layout_weight=&quot;1&quot;&#10;                    android:text=&quot;No&quot;&#10;                    android:textSize=&quot;16sp&quot;&#10;                    android:textStyle=&quot;bold&quot;&#10;                    android:gravity=&quot;end&quot; /&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Explanation Text --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Converting by-products can provide a sustainable stream. We process the hulls and bran into nutrient-rich feed pellets, ready for sale or your own use.&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:lineSpacingExtra=&quot;4dp&quot;&#10;                android:textColor=&quot;@color/text_secondary&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/ScrollView&gt;&#10;&#10;    &lt;!-- Next Button --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnNext&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;56dp&quot;&#10;        android:layout_margin=&quot;24dp&quot;&#10;        android:background=&quot;@drawable/button_primary&quot;&#10;        android:text=&quot;Next&quot;&#10;        android:textColor=&quot;@color/white&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/white&quot;&gt;&#10;&#10;    &lt;!-- Header --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/headerLayout&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:background=&quot;@color/primary_green&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;24dp&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Step 4 of 5:&quot;&#10;            android:textColor=&quot;@color/white&quot;&#10;            android:textSize=&quot;16sp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;4dp&quot;&#10;            android:text=&quot;Feeds Conversion&quot;&#10;            android:textColor=&quot;@color/white&quot;&#10;            android:textSize=&quot;24sp&quot;&#10;            android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tvStepProgress&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_marginTop=&quot;8dp&quot;&#10;            android:text=&quot;4/5&quot;&#10;            android:textColor=&quot;@color/white&quot;&#10;            android:textSize=&quot;14sp&quot; /&gt;&#10;&#10;        &lt;!-- Progress Bar --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;8dp&quot;&#10;            android:layout_marginTop=&quot;12dp&quot;&#10;            android:background=&quot;@drawable/progress_bar_background&quot;&#10;            android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:background=&quot;@color/primary_green&quot; /&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:background=&quot;@color/primary_green&quot; /&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:background=&quot;@color/primary_green&quot; /&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:background=&quot;@color/primary_green&quot; /&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;match_parent&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:background=&quot;@color/light_gray&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Content --&gt;&#10;    &lt;ScrollView&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:fillViewport=&quot;true&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/btnNext&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/headerLayout&quot;&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:padding=&quot;24dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Would you like to convert your milling by-products (rice hulls, bran) into animal feeds?&quot;&#10;                android:textSize=&quot;18sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginBottom=&quot;32dp&quot; /&gt;&#10;&#10;            &lt;!-- Toggle Switch --&gt;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;horizontal&quot;&#10;                android:gravity=&quot;center_vertical&quot;&#10;                android:layout_marginBottom=&quot;24dp&quot;&gt;&#10;&#10;                &lt;!-- RadioGroup with Yes / No options for feeds conversion --&gt;&#10;                &lt;RadioGroup&#10;                    android:id=&quot;@+id/radioGroupFeeds&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;horizontal&quot;&#10;                    android:gravity=&quot;center_vertical&quot;&#10;                    android:layout_marginBottom=&quot;8dp&quot;&#10;                    android:padding=&quot;4dp&quot;&gt;&#10;&#10;                    &lt;RadioButton&#10;                        android:id=&quot;@+id/radioFeedsYes&quot;&#10;                        android:layout_width=&quot;0dp&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_weight=&quot;1&quot;&#10;                        android:text=&quot;Yes&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textStyle=&quot;bold&quot;&#10;                        android:buttonTint=&quot;@color/primary_main&quot;&#10;                        android:padding=&quot;12dp&quot;&#10;                        android:layout_marginEnd=&quot;8dp&quot;&#10;                        android:background=&quot;?attr/selectableItemBackgroundBorderless&quot; /&gt;&#10;&#10;                    &lt;RadioButton&#10;                        android:id=&quot;@+id/radioFeedsNo&quot;&#10;                        android:layout_width=&quot;0dp&quot;&#10;                        android:layout_height=&quot;wrap_content&quot;&#10;                        android:layout_weight=&quot;1&quot;&#10;                        android:text=&quot;No&quot;&#10;                        android:textSize=&quot;16sp&quot;&#10;                        android:textStyle=&quot;bold&quot;&#10;                        android:gravity=&quot;end&quot;&#10;                        android:buttonTint=&quot;@color/primary_main&quot;&#10;                        android:padding=&quot;12dp&quot;&#10;                        android:layout_marginStart=&quot;8dp&quot;&#10;                        android:background=&quot;?attr/selectableItemBackgroundBorderless&quot; /&gt;&#10;&#10;                &lt;/RadioGroup&gt;&#10;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;!-- Explanation Text --&gt;&#10;            &lt;TextView&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Converting by-products can provide a sustainable stream. We process the hulls and bran into nutrient-rich feed pellets, ready for sale or your own use.&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:lineSpacingExtra=&quot;4dp&quot;&#10;                android:textColor=&quot;@color/text_secondary&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;    &lt;/ScrollView&gt;&#10;&#10;    &lt;!-- Next Button --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnNext&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;56dp&quot;&#10;        android:layout_margin=&quot;24dp&quot;&#10;        android:background=&quot;@drawable/button_primary&quot;&#10;        android:text=&quot;Next&quot;&#10;        android:textColor=&quot;@color/white&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_request_simple.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_request_simple.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/white&quot;&#10;    android:padding=&quot;24dp&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/tvTitle&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Create New Request&quot;&#10;        android:textColor=&quot;@color/text_primary&quot;&#10;        android:textSize=&quot;28sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        tools:layout_editor_absoluteY=&quot;256dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/tvDescription&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:text=&quot;Use our step-by-step wizard to create your rice milling request easily and quickly.&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textColor=&quot;@color/text_secondary&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:lineSpacingExtra=&quot;4dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/tvTitle&quot; /&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnStartWizard&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;56dp&quot;&#10;        android:layout_marginTop=&quot;48dp&quot;&#10;        android:background=&quot;@drawable/button_primary&quot;&#10;        android:text=&quot;Start Request Wizard&quot;&#10;        android:textColor=&quot;@color/white&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/tvDescription&quot; /&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;32dp&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/btnStartWizard&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;What you can do:&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textColor=&quot;@color/text_primary&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;• Choose milling type (fee or rice conversion)&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textColor=&quot;@color/text_secondary&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;• Select pickup and delivery options&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textColor=&quot;@color/text_secondary&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;• Configure feeds conversion&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textColor=&quot;@color/text_secondary&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;• Enter contact details and submit&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textColor=&quot;@color/text_secondary&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:background=&quot;@color/white&quot;&#10;    android:padding=&quot;24dp&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/tvTitle&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Create New Request&quot;&#10;        android:textColor=&quot;@color/text_primary&quot;&#10;        android:textSize=&quot;28sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/tvDescription&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:text=&quot;Use our step-by-step wizard to create your rice milling request easily and quickly.&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textColor=&quot;@color/text_secondary&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:lineSpacingExtra=&quot;4dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/tvTitle&quot; /&gt;&#10;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnStartWizard&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;56dp&quot;&#10;        android:layout_marginTop=&quot;48dp&quot;&#10;        android:background=&quot;@drawable/button_primary&quot;&#10;        android:text=&quot;Start Request Wizard&quot;&#10;        android:textColor=&quot;@color/white&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:textStyle=&quot;bold&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/tvDescription&quot; /&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;32dp&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/btnStartWizard&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;What you can do:&quot;&#10;            android:textSize=&quot;18sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textColor=&quot;@color/text_primary&quot;&#10;            android:layout_marginBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;• Choose milling type (fee or rice conversion)&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textColor=&quot;@color/text_secondary&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;• Select pickup and delivery options&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textColor=&quot;@color/text_secondary&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;• Configure feeds conversion&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textColor=&quot;@color/text_secondary&quot;&#10;            android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;!-- Removed inline radio from summary; feeds conversion is selected inside the wizard step --&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;• Enter contact details and submit&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:textColor=&quot;@color/text_secondary&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>