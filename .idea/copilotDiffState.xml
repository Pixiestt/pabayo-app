<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/capstone2/adapter/CustomerHistoryAdapter.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/capstone2/adapter/CustomerHistoryAdapter.kt" />
              <option name="originalContent" value="package com.example.capstone2.adapter&#10;&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.Button&#10;import android.widget.LinearLayout&#10;import android.widget.TextView&#10;import androidx.recyclerview.widget.RecyclerView&#10;import com.example.capstone2.R&#10;import com.example.capstone2.data.models.Request&#10;&#10;class CustomerHistoryAdapter(&#10;    private var completedRequests: List&lt;Request&gt;&#10;) : RecyclerView.Adapter&lt;CustomerHistoryAdapter.HistoryViewHolder&gt;() {&#10;&#10;    inner class HistoryViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {&#10;        val completionDate: TextView = itemView.findViewById(R.id.tvCompletionDate)&#10;        val serviceName: TextView = itemView.findViewById(R.id.tvServiceName)&#10;        val btnViewDetails: Button = itemView.findViewById(R.id.btnViewDetails)&#10;        val detailsLayout: LinearLayout = itemView.findViewById(R.id.layoutDetails)&#10;        &#10;        // Detail view elements&#10;        val requestId: TextView = itemView.findViewById(R.id.tvRequestId)&#10;        val sackQuantity: TextView = itemView.findViewById(R.id.tvSackQuantity)&#10;        val status: TextView = itemView.findViewById(R.id.tvStatus)&#10;        // New: Payment amount text view&#10;        val paymentAmount: TextView = itemView.findViewById(R.id.tvPaymentAmount)&#10;    }&#10;&#10;    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): HistoryViewHolder {&#10;        val view = LayoutInflater.from(parent.context)&#10;            .inflate(R.layout.item_customer_history, parent, false)&#10;        return HistoryViewHolder(view)&#10;    }&#10;&#10;    override fun onBindViewHolder(holder: HistoryViewHolder, position: Int) {&#10;        val request = completedRequests[position]&#10;        val ctx = holder.itemView.context&#10;&#10;        // Set the compact view info&#10;        val completedDate = request.dateUpdated ?: ctx.getString(R.string.not_available)&#10;        holder.completionDate.text = ctx.getString(R.string.completed_on_format, completedDate)&#10;        holder.serviceName.text = ctx.getString(R.string.service_format, request.serviceName)&#10;        holder.btnViewDetails.text = ctx.getString(R.string.view_details)&#10;&#10;        // Set the detailed view info&#10;        holder.requestId.text = ctx.getString(R.string.request_id_format, request.requestID)&#10;        holder.sackQuantity.text = ctx.getString(R.string.sack_qty_format, request.sackQuantity)&#10;        holder.status.text = ctx.getString(R.string.status_format, ctx.getString(R.string.completed_label))&#10;&#10;        // Bind payment amount if available&#10;        val amt: Double? = request.paymentAmount&#10;            ?: request.payment?.amount&#10;            ?: request.payment?.amountString?.toDoubleOrNull()&#10;        if (amt != null) {&#10;            holder.paymentAmount.text = ctx.getString(R.string.payment_amount_format, amt)&#10;        } else {&#10;            holder.paymentAmount.text = ctx.getString(R.string.payment_amount_not_set)&#10;        }&#10;&#10;        // Toggle details visibility on button click&#10;        var isExpanded = false&#10;        &#10;        holder.btnViewDetails.setOnClickListener {&#10;            isExpanded = !isExpanded&#10;            holder.detailsLayout.visibility = if (isExpanded) View.VISIBLE else View.GONE&#10;            holder.btnViewDetails.text = if (isExpanded) ctx.getString(R.string.hide_details) else ctx.getString(R.string.view_details)&#10;        }&#10;    }&#10;&#10;    override fun getItemCount() = completedRequests.size&#10;&#10;    fun updateRequests(newRequests: List&lt;Request&gt;) {&#10;        completedRequests = newRequests&#10;        notifyDataSetChanged()&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.capstone2.adapter&#10;&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.Button&#10;import android.widget.LinearLayout&#10;import android.widget.TextView&#10;import androidx.recyclerview.widget.RecyclerView&#10;import com.example.capstone2.R&#10;import com.example.capstone2.data.models.Request&#10;&#10;class CustomerHistoryAdapter(&#10;    private var completedRequests: List&lt;Request&gt;&#10;) : RecyclerView.Adapter&lt;CustomerHistoryAdapter.HistoryViewHolder&gt;() {&#10;&#10;    inner class HistoryViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {&#10;        val completionDate: TextView = itemView.findViewById(R.id.tvCompletionDate)&#10;        val serviceName: TextView = itemView.findViewById(R.id.tvServiceName)&#10;        val btnViewDetails: Button = itemView.findViewById(R.id.btnViewDetails)&#10;        val detailsLayout: LinearLayout = itemView.findViewById(R.id.layoutDetails)&#10;        &#10;        // Detail view elements&#10;        val requestId: TextView = itemView.findViewById(R.id.tvRequestId)&#10;        val sackQuantity: TextView = itemView.findViewById(R.id.tvSackQuantity)&#10;        val status: TextView = itemView.findViewById(R.id.tvStatus)&#10;        // New: Payment amount text view&#10;        val paymentAmount: TextView = itemView.findViewById(R.id.tvPaymentAmount)&#10;        // NEW: Milled kilograms text view&#10;        val milledKg: TextView? = itemView.findViewById(R.id.tvMilledKg)&#10;    }&#10;&#10;    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): HistoryViewHolder {&#10;        val view = LayoutInflater.from(parent.context)&#10;            .inflate(R.layout.item_customer_history, parent, false)&#10;        return HistoryViewHolder(view)&#10;    }&#10;&#10;    override fun onBindViewHolder(holder: HistoryViewHolder, position: Int) {&#10;        val request = completedRequests[position]&#10;        val ctx = holder.itemView.context&#10;&#10;        // Set the compact view info&#10;        val completedDate = request.dateUpdated ?: ctx.getString(R.string.not_available)&#10;        holder.completionDate.text = ctx.getString(R.string.completed_on_format, completedDate)&#10;        holder.serviceName.text = ctx.getString(R.string.service_format, request.serviceName)&#10;        holder.btnViewDetails.text = ctx.getString(R.string.view_details)&#10;&#10;        // Set the detailed view info&#10;        holder.requestId.text = ctx.getString(R.string.request_id_format, request.requestID)&#10;        holder.sackQuantity.text = ctx.getString(R.string.sack_qty_format, request.sackQuantity)&#10;        holder.status.text = ctx.getString(R.string.status_format, ctx.getString(R.string.completed_label))&#10;&#10;        // Bind payment amount if available&#10;        val amt: Double? = request.paymentAmount&#10;            ?: request.payment?.amount&#10;            ?: request.payment?.amountString?.toDoubleOrNull()&#10;        if (amt != null) {&#10;            holder.paymentAmount.text = ctx.getString(R.string.payment_amount_format, amt)&#10;        } else {&#10;            holder.paymentAmount.text = ctx.getString(R.string.payment_amount_not_set)&#10;        }&#10;&#10;        // NEW: Bind milled kilograms if available&#10;        holder.milledKg?.let { tv -&gt;&#10;            val kg = request.milledKg&#10;            if (kg != null) {&#10;                tv.visibility = View.VISIBLE&#10;                tv.text = ctx.getString(R.string.milled_kg_format, kg)&#10;            } else {&#10;                tv.visibility = View.GONE&#10;            }&#10;        }&#10;&#10;        // Toggle details visibility on button click&#10;        var isExpanded = false&#10;        &#10;        holder.btnViewDetails.setOnClickListener {&#10;            isExpanded = !isExpanded&#10;            holder.detailsLayout.visibility = if (isExpanded) View.VISIBLE else View.GONE&#10;            holder.btnViewDetails.text = if (isExpanded) ctx.getString(R.string.hide_details) else ctx.getString(R.string.view_details)&#10;        }&#10;    }&#10;&#10;    override fun getItemCount() = completedRequests.size&#10;&#10;    fun updateRequests(newRequests: List&lt;Request&gt;) {&#10;        completedRequests = newRequests&#10;        notifyDataSetChanged()&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/capstone2/adapter/OwnerHistoryAdapter.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/capstone2/adapter/OwnerHistoryAdapter.kt" />
              <option name="originalContent" value="package com.example.capstone2.adapter&#10;&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.Button&#10;import android.widget.LinearLayout&#10;import android.widget.TextView&#10;import androidx.recyclerview.widget.RecyclerView&#10;import com.example.capstone2.R&#10;import com.example.capstone2.data.models.Request&#10;&#10;class OwnerHistoryAdapter(&#10;    private var completedRequests: List&lt;Request&gt;&#10;) : RecyclerView.Adapter&lt;OwnerHistoryAdapter.HistoryViewHolder&gt;() {&#10;&#10;    inner class HistoryViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {&#10;        val completionDate: TextView = itemView.findViewById(R.id.tvCompletionDate)&#10;        val serviceName: TextView = itemView.findViewById(R.id.tvServiceName)&#10;        val btnViewDetails: Button = itemView.findViewById(R.id.btnViewDetails)&#10;        val detailsLayout: LinearLayout = itemView.findViewById(R.id.layoutDetails)&#10;        &#10;        // Detail view elements&#10;        val requestId: TextView = itemView.findViewById(R.id.tvRequestId)&#10;        val customerName: TextView = itemView.findViewById(R.id.tvCustomerName)&#10;        val sackQuantity: TextView = itemView.findViewById(R.id.tvSackQuantity)&#10;        val status: TextView = itemView.findViewById(R.id.tvStatus)&#10;        // New: Payment amount text view&#10;        val paymentAmount: TextView = itemView.findViewById(R.id.tvPaymentAmount)&#10;    }&#10;&#10;    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): HistoryViewHolder {&#10;        val view = LayoutInflater.from(parent.context)&#10;            .inflate(R.layout.item_owner_history, parent, false)&#10;        return HistoryViewHolder(view)&#10;    }&#10;&#10;    override fun onBindViewHolder(holder: HistoryViewHolder, position: Int) {&#10;        val request = completedRequests[position]&#10;        val ctx = holder.itemView.context&#10;&#10;        // Set the compact view info&#10;        val completedDate = request.dateUpdated ?: ctx.getString(R.string.not_available)&#10;        holder.completionDate.text = ctx.getString(R.string.completed_on_format, completedDate)&#10;        holder.serviceName.text = ctx.getString(R.string.service_format, request.serviceName)&#10;        holder.btnViewDetails.text = ctx.getString(R.string.view_details)&#10;&#10;        // Set the detailed view info&#10;        holder.requestId.text = ctx.getString(R.string.request_id_format, request.requestID)&#10;        holder.customerName.text = ctx.getString(R.string.customer_format, request.customerName)&#10;        holder.sackQuantity.text = ctx.getString(R.string.sack_qty_format, request.sackQuantity)&#10;        holder.status.text = ctx.getString(R.string.status_format, ctx.getString(R.string.completed_label))&#10;&#10;        // Bind payment amount if available&#10;        val amt: Double? = request.paymentAmount&#10;            ?: request.payment?.amount&#10;            ?: request.payment?.amountString?.toDoubleOrNull()&#10;        if (amt != null) {&#10;            holder.paymentAmount.text = ctx.getString(R.string.payment_amount_format, amt)&#10;        } else {&#10;            holder.paymentAmount.text = ctx.getString(R.string.payment_amount_not_set)&#10;        }&#10;&#10;        // Toggle details visibility on button click&#10;        var isExpanded = false&#10;        &#10;        holder.btnViewDetails.setOnClickListener {&#10;            isExpanded = !isExpanded&#10;            holder.detailsLayout.visibility = if (isExpanded) View.VISIBLE else View.GONE&#10;            holder.btnViewDetails.text = if (isExpanded) ctx.getString(R.string.hide_details) else ctx.getString(R.string.view_details)&#10;        }&#10;    }&#10;&#10;    override fun getItemCount() = completedRequests.size&#10;&#10;    fun updateRequests(newRequests: List&lt;Request&gt;) {&#10;        completedRequests = newRequests&#10;        notifyDataSetChanged()&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.capstone2.adapter&#10;&#10;import android.view.LayoutInflater&#10;import android.view.View&#10;import android.view.ViewGroup&#10;import android.widget.Button&#10;import android.widget.LinearLayout&#10;import android.widget.TextView&#10;import androidx.recyclerview.widget.RecyclerView&#10;import com.example.capstone2.R&#10;import com.example.capstone2.data.models.Request&#10;&#10;class OwnerHistoryAdapter(&#10;    private var completedRequests: List&lt;Request&gt;&#10;) : RecyclerView.Adapter&lt;OwnerHistoryAdapter.HistoryViewHolder&gt;() {&#10;&#10;    inner class HistoryViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {&#10;        val completionDate: TextView = itemView.findViewById(R.id.tvCompletionDate)&#10;        val serviceName: TextView = itemView.findViewById(R.id.tvServiceName)&#10;        val btnViewDetails: Button = itemView.findViewById(R.id.btnViewDetails)&#10;        val detailsLayout: LinearLayout = itemView.findViewById(R.id.layoutDetails)&#10;        &#10;        // Detail view elements&#10;        val requestId: TextView = itemView.findViewById(R.id.tvRequestId)&#10;        val customerName: TextView = itemView.findViewById(R.id.tvCustomerName)&#10;        val sackQuantity: TextView = itemView.findViewById(R.id.tvSackQuantity)&#10;        val status: TextView = itemView.findViewById(R.id.tvStatus)&#10;        // New: Payment amount text view&#10;        val paymentAmount: TextView = itemView.findViewById(R.id.tvPaymentAmount)&#10;        // NEW: Milled kilograms text view&#10;        val milledKg: TextView? = itemView.findViewById(R.id.tvMilledKg)&#10;    }&#10;&#10;    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): HistoryViewHolder {&#10;        val view = LayoutInflater.from(parent.context)&#10;            .inflate(R.layout.item_owner_history, parent, false)&#10;        return HistoryViewHolder(view)&#10;    }&#10;&#10;    override fun onBindViewHolder(holder: HistoryViewHolder, position: Int) {&#10;        val request = completedRequests[position]&#10;        val ctx = holder.itemView.context&#10;&#10;        // Set the compact view info&#10;        val completedDate = request.dateUpdated ?: ctx.getString(R.string.not_available)&#10;        holder.completionDate.text = ctx.getString(R.string.completed_on_format, completedDate)&#10;        holder.serviceName.text = ctx.getString(R.string.service_format, request.serviceName)&#10;        holder.btnViewDetails.text = ctx.getString(R.string.view_details)&#10;&#10;        // Set the detailed view info&#10;        holder.requestId.text = ctx.getString(R.string.request_id_format, request.requestID)&#10;        holder.customerName.text = ctx.getString(R.string.customer_format, request.customerName)&#10;        holder.sackQuantity.text = ctx.getString(R.string.sack_qty_format, request.sackQuantity)&#10;        holder.status.text = ctx.getString(R.string.status_format, ctx.getString(R.string.completed_label))&#10;&#10;        // Bind payment amount if available&#10;        val amt: Double? = request.paymentAmount&#10;            ?: request.payment?.amount&#10;            ?: request.payment?.amountString?.toDoubleOrNull()&#10;        if (amt != null) {&#10;            holder.paymentAmount.text = ctx.getString(R.string.payment_amount_format, amt)&#10;        } else {&#10;            holder.paymentAmount.text = ctx.getString(R.string.payment_amount_not_set)&#10;        }&#10;&#10;        // NEW: Bind milled kilograms if available&#10;        holder.milledKg?.let { tv -&gt;&#10;            val kg = request.milledKg&#10;            if (kg != null) {&#10;                tv.visibility = View.VISIBLE&#10;                tv.text = ctx.getString(R.string.milled_kg_format, kg)&#10;            } else {&#10;                tv.visibility = View.GONE&#10;            }&#10;        }&#10;&#10;        // Toggle details visibility on button click&#10;        var isExpanded = false&#10;        &#10;        holder.btnViewDetails.setOnClickListener {&#10;            isExpanded = !isExpanded&#10;            holder.detailsLayout.visibility = if (isExpanded) View.VISIBLE else View.GONE&#10;            holder.btnViewDetails.text = if (isExpanded) ctx.getString(R.string.hide_details) else ctx.getString(R.string.view_details)&#10;        }&#10;    }&#10;&#10;    override fun getItemCount() = completedRequests.size&#10;&#10;    fun updateRequests(newRequests: List&lt;Request&gt;) {&#10;        completedRequests = newRequests&#10;        notifyDataSetChanged()&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/fragment_messages.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/fragment_messages.xml" />
              <option name="originalContent" value="&#10;&#10;&#10;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:padding=&quot;8dp&quot;&gt;&#10;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/rvConversations&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:clipToPadding=&quot;false&quot;&#10;        android:paddingBottom=&quot;8dp&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/tvEmpty&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:text=&quot;No conversations&quot;&#10;        android:visibility=&quot;gone&quot;/&gt;&#10;&#10;&lt;/FrameLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_customer_history.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_customer_history.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_margin=&quot;8dp&quot;&#10;    android:elevation=&quot;4dp&quot;&#10;    app:cardCornerRadius=&quot;8dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;!-- Default compact view --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tvCompletionDate&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;@string/not_available&quot;&#10;                    android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tvServiceName&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;@string/service_label&quot;&#10;                    android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btnViewDetails&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/view_details&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.TextButton&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Expandable detailed view --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/layoutDetails&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:visibility=&quot;gone&quot;&#10;            android:layout_marginTop=&quot;8dp&quot;&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#CCCCCC&quot;&#10;                android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvRequestId&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/label_request_id&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvSackQuantity&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/label_sacks&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvStatus&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/label_status&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;!-- New: Payment amount --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvPaymentAmount&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;4dp&quot;&#10;                android:text=&quot;@string/payment_amount_not_set&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/androidx.cardview.widget.CardView&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_margin=&quot;8dp&quot;&#10;    android:elevation=&quot;4dp&quot;&#10;    app:cardCornerRadius=&quot;8dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;!-- Default compact view --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tvCompletionDate&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;@string/not_available&quot;&#10;                    android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tvServiceName&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;@string/service_label&quot;&#10;                    android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btnViewDetails&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/view_details&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.TextButton&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Expandable detailed view --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/layoutDetails&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:visibility=&quot;gone&quot;&#10;            android:layout_marginTop=&quot;8dp&quot;&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#CCCCCC&quot;&#10;                android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvRequestId&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/label_request_id&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvSackQuantity&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/label_sacks&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvStatus&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/label_status&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;!-- New: Payment amount --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvPaymentAmount&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;4dp&quot;&#10;                android:text=&quot;@string/payment_amount_not_set&quot; /&gt;&#10;&#10;            &lt;!-- New: Milled kilograms (hidden by default, shown when available) --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvMilledKg&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;4dp&quot;&#10;                android:visibility=&quot;gone&quot;&#10;                android:text=&quot;&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/androidx.cardview.widget.CardView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_owner_history.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_owner_history.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_margin=&quot;8dp&quot;&#10;    android:elevation=&quot;4dp&quot;&#10;    app:cardCornerRadius=&quot;8dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;!-- Default compact view --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tvCompletionDate&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;@string/not_available&quot;&#10;                    android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tvServiceName&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;@string/service_label&quot;&#10;                    android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btnViewDetails&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/view_details&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.TextButton&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Expandable detailed view --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/layoutDetails&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:visibility=&quot;gone&quot;&#10;            android:layout_marginTop=&quot;8dp&quot;&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#CCCCCC&quot;&#10;                android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvRequestId&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/label_request_id&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvCustomerName&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/label_customer&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvSackQuantity&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/label_sacks&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvStatus&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/label_status&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;!-- New: Payment amount --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvPaymentAmount&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;4dp&quot;&#10;                android:text=&quot;@string/payment_amount_not_set&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/androidx.cardview.widget.CardView&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_margin=&quot;8dp&quot;&#10;    android:elevation=&quot;4dp&quot;&#10;    app:cardCornerRadius=&quot;8dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:padding=&quot;16dp&quot;&gt;&#10;&#10;        &lt;!-- Default compact view --&gt;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tvCompletionDate&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;@string/not_available&quot;&#10;                    android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tvServiceName&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;@string/service_label&quot;&#10;                    android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;            &lt;/LinearLayout&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/btnViewDetails&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/view_details&quot;&#10;                style=&quot;@style/Widget.MaterialComponents.Button.TextButton&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- Expandable detailed view --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/layoutDetails&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:visibility=&quot;gone&quot;&#10;            android:layout_marginTop=&quot;8dp&quot;&gt;&#10;&#10;            &lt;View&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;1dp&quot;&#10;                android:background=&quot;#CCCCCC&quot;&#10;                android:layout_marginBottom=&quot;8dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvRequestId&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/label_request_id&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvCustomerName&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/label_customer&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvSackQuantity&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/label_sacks&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvStatus&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;@string/label_status&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:layout_marginTop=&quot;4dp&quot; /&gt;&#10;&#10;            &lt;!-- New: Payment amount --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvPaymentAmount&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;4dp&quot;&#10;                android:text=&quot;@string/payment_amount_not_set&quot; /&gt;&#10;&#10;            &lt;!-- New: Milled kilograms (hidden by default, shown when available) --&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvMilledKg&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginTop=&quot;4dp&quot;&#10;                android:visibility=&quot;gone&quot;&#10;                android:text=&quot;&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/androidx.cardview.widget.CardView&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>